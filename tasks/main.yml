---
- name: Create Ansible user
  user:
    name: ansible

- name: Create ansible.log
  file:
    path: /var/log/ansible.log
    state: touch
    modification_time: preserve
    access_time: preserve
    mode: '0644'
    owner: "{{ lookup('env','USER') }}"
    group: "{{ lookup('env','USER') }}"

- name: Install buster-backports
  apt_repository: repo="deb http://ftp.debian.org/debian buster-backports main"
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '10'

- name: Install Ansible from backport
  apt:
    name: ansible
    state: latest
    default_release: buster-backports
    # 86400 seconds = 24 hours
    cache_valid_time: 86400
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '10'

- name: Install necessary Ansible packages
  apt:
    name: ['ansible', 'pass', 'expect', 'python3-pip', "php-cli", "php-curl", "python3-lxml"]
    # 86400 seconds = 24 hours
    cache_valid_time: 86400

- name: Install pip packages for Megaphone Ansible
  pip:
    name: 
      - linode_api4
      - PyMySql

- name: Install ansible.cfg
  copy: 
    src: files/ansible.cfg
    dest: "{{ playbook_dir }}/ansible.cfg"
    mode: '0644'
    owner: "{{ansible_user}}"
    group: "{{ansible_user}}"

- name: Install gethosts.cfg.php
  copy: 
    src: files/gethosts.cfg.php
    dest: "{{ playbook_dir }}/gethosts.cfg.php"
    mode: '0644'
    owner: "{{ansible_user}}"
    group: "{{ansible_user}}"

- name: Install community Ansible modules
  command: ansible-galaxy collection install community.general

- name: Add gitea keys to local user known_hosts
  known_hosts:
    name: "git.megaphonetech.com"
    key: "{{ inner_item }}"
  loop_control:
    loop_var: inner_item
  with_items:
    - "git.megaphonetech.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDgNwIe3TBtRHtkwoHL2TG84/f039hgzqVbN0z4sk1UHPZr4rxFinGCGjedzE+adVucqr/gemPnETfashTujcPyZZkwPn2dQNx0HuPHw3H+cqXqKt03fsgPcerqsqvFS509pcblmP5vtJLF4uVgbh6TLmZiObMuiIYe9VTyZSXo67DTt/K6SSgwyUFldqJIJQA+DO1nXoSYSJ4fP1DDPdue0RTL06VtlnUL2w9iHrOgVRY1KqAtpnGRslKx5c3L8+9EBMdJWM1CPK11vkvyf8LnYwuCH4V7w0rVs2QAE9Abm4g4HiE4wql5QJrjCi/cq/1doeY9KXxFb8SOTtZBk5Nn"
    - "git.megaphonetech.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBLuEP2fW8Eycdbeo0XWihr63zj6yCTcCjxh4C4i3c8p2O44mKRjVhxOSSBQQxZNUKeJYAGTuWh+EPW71KADzXv0="
    - "git.megaphonetech.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJoN1UsqLqucSJo4dSum6Xy2qCrlutDAu3wPdprAL4w"
  become: no

- name: get the current user's home directory (for next step)
  set_fact:
    my_home_dir: "{{ lookup('env','HOME') }}"
  become: true
  become_user: "{{ ansible_env.SUDO_USER }}"

- name: Create authorized_keys on root
  ansible.posix.authorized_key:
    user: root
    key: "{{ lookup('file', '{{ my_home_dir }}/.ssh/id_rsa.pub') }}"

- name: Download the password database
  git:
    repo: "ssh://git@git.megaphonetech.com/megaphone/passwords.git"
    dest: ~/.password-store
  become: no

- name: Add Ansible user to sudo
  lineinfile:
    dest: /etc/sudoers.d/ansible
    state: present
    create: yes
    regexp: "^{{ ansible_user }}"
    line: "{{ ansible_user }} ALL=(ALL) NOPASSWD: ALL"
    validate: 'visudo -cf %s'

- name: Add authorized keys to Ansible user
  authorized_key:
    user: "{{ lookup('env','USER') }}"
    key: "https://ssh.megaphonetech.com/{{ lookup('env','USER') }}_id_rsa.pub"
  become: yes
